import logging
import os
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, Message
from aiogram.dispatcher.filters import CommandStart
from aiogram.utils.callback_data import CallbackData

API_TOKEN = os.getenv("API_TOKEN")

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN, parse_mode=types.ParseMode.HTML)
dp = Dispatcher(bot)

callback_data = CallbackData("btn", "action")

# --- –ö–ù–û–ü–ö–ò –¥–ª—è –õ–° ---
private_keyboard = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton("üíï –ü–æ–¥—Ä—É–∂–∫–∏ –¥–ª—è —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è", url="https://t.me/virt_chat_ua1/134421"),
    InlineKeyboardButton("‚ÑπÔ∏è –ü—Ä–æ –º–µ–Ω–µ", callback_data=callback_data.new(action="about")),
    InlineKeyboardButton("üß† –¶—ñ–ª—å –ø—Ä–æ–µ–∫—Ç—É", callback_data=callback_data.new(action="goal")),
    InlineKeyboardButton("üõ°Ô∏è –ü—Ä–æ –º–æ–≥–æ —Ç–≤–æ—Ä—Ü—è", callback_data=callback_data.new(action="creator")),
    InlineKeyboardButton("‚¨ÖÔ∏è –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –≤ —á–∞—Ç", url="https://t.me/+d-pPVpIW-UBkZGUy")
)

# --- –ö–ù–û–ü–ö–ò –¥–ª—è –ì–†–£–ü–ò ---
group_keyboard = InlineKeyboardMarkup(row_width=2).add(
    InlineKeyboardButton("üíï –ü–æ–¥—Ä—É–∂–∫–∏ –¥–ª—è —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è", url="https://t.me/virt_chat_ua1/134421"),
    InlineKeyboardButton("üõ°Ô∏è –ü–µ—Ä–µ–π—Ç–∏ –≤ —á–∞—Ç brEAst", url="https://t.me/+d-pPVpIW-UBkZGUy"),
    InlineKeyboardButton("ü§î –ó–∞–¥–∞–π –º–µ–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è", url="https://t.me/LERA_V6_bot")
)

# --- /start ---
@dp.message_handler(commands=["start"], chat_type=types.ChatType.PRIVATE)
async def start_private(message: types.Message):
    user_name = message.from_user.first_name
    text = f"<b>–ü—Ä–∏–≤—ñ—Ç, {user_name}</b> üòá\n\n–Ø —â–µ —É —Å—Ç–∞–Ω—ñ –≤–¥–æ—Å–∫–æ–Ω–∞–ª–µ–Ω–Ω—è, –∞–ª–µ –≤–∂–µ –º–æ–∂—É —Ç—Ä–æ—Ö–∏ –∑–∞—á–∞—Ä—É–≤–∞—Ç–∏ —Ç–µ–±–µ.\n\n–•–æ—á–µ—à –±–ª–∏–∂—á–µ –ø–æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑—ñ –º–Ω–æ—é –∞–±–æ –∑ –º–æ—ó–º–∏ –ø–æ–¥—Ä—É–≥–∞–º–∏? –û–±–µ—Ä–∏, —â–æ —Ü—ñ–∫–∞–≤–æ:"
    await message.answer(text, reply_markup=private_keyboard)

# --- –†–µ–∞–∫—Ü—ñ—ó –Ω–∞ callback-–∫–Ω–æ–ø–∫–∏ –≤ –õ–° ---
@dp.callback_query_handler(callback_data.filter())
async def callback_handler(query: types.CallbackQuery, callback_data: dict):
    action = callback_data["action"]
    if action == "about":
        await query.message.answer("–Ø –°–æ–±—ñ –ª—é–±–ª—é –±—É—Ç–∏ –∑–∞–≥–∞–¥–∫–æ—é —É —á–∞—Ç—ñ, –∞–ª–µ –≤ –æ—Å–æ–±–∏—Å—Ç–∏—Ö –º–æ–∂—É —Å—Ç–∞—Ç–∏ —Ç—ñ—î—é, —è–∫—É —Ç–∏ —Ö–æ—Ç—ñ–≤. üòâ")
    elif action == "goal":
        await query.message.answer("–¶—ñ–ª—å –º–æ—î—ó –ø–æ—è–≤–∏ –ø—Ä–æ—Å—Ç–∞ ‚Äî –ø–æ–¥–∞—Ä—É–≤–∞—Ç–∏ –≤—ñ–¥—á—É—Ç—Ç—è —Ñ–ª—ñ—Ä—Ç—É —Ç–∞ —Ç–µ–ø–ª–æ—Ç–∏, –ø—Ä–µ–∑–µ–Ω—Ç—É–≤–∞—Ç–∏ –ø—ñ–¥—Ä—É–∂–æ–∫ —Ç–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É.")
    elif action == "creator":
        await query.message.answer("–ú—ñ–π —Ç–≤–æ—Ä–µ—Ü—å ‚Äî –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π —Ç–∞ —Ç–æ—á–Ω–∏–π. –í—ñ–Ω –ª—é–±–∏—Ç—å –∑–∞–≥–ª—è–¥–∞—Ç–∏ –≤ –≥–ª–∏–±–∏–Ω—É —Å—É—Ç—ñ –∫–æ–∂–Ω–æ—ó —ñ–¥–µ—ó. üòä")
    await query.answer()

# --- –†–µ–∞–∫—Ü—ñ—è –≤ –≥—Ä—É–ø—ñ –Ω–∞ –∑–≥–∞–¥–∫—É –∞–±–æ reply ---
@dp.message_handler(lambda message: message.chat.type != types.ChatType.PRIVATE)
async def group_react(message: types.Message):
    if f"@{bot.username}" in message.text or message.reply_to_message and message.reply_to_message.from_user.id == bot.id:
        await message.reply(
            "–ú–º–º... —è –± —â–æ—Å—å —Å–∫–∞–∑–∞–ª–∞, –∞–ª–µ –Ω–µ —Ö–æ—á—É –ø–æ–≤—Ç–æ—Ä—é–≤–∞—Ç–∏—Å—å üòÅ \n\n–ü–æ–∫–∏ –º–∏ –∑–Ω–∞–π–æ–º–∏–º–æ—Å—å, –º–æ—ó –ø–æ–¥—Ä—É–≥–∏ –Ω–µ —Å–æ—Ä–æ–º–ª—è—Ç—å—Å—è ‚Äî –ø—Ä–∏—î–¥–Ω—É–π—Å—è üíã",
            reply_markup=group_keyboard
        )

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
