import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.contrib.fsm_storage.memory import MemoryStorage
import asyncio
import os

API_TOKEN = os.getenv("BOT_TOKEN")
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot, storage=MemoryStorage())
logging.basicConfig(level=logging.INFO)

# ------------------- –ö–ù–û–ü–ö–ò -----------------------

group_buttons = InlineKeyboardMarkup(row_width=2)
group_buttons.add(
    InlineKeyboardButton("üíû –ü–æ–¥—Ä—É–∂–∫–∏ –¥–ª—è —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è", url="https://t.me/virt_chat_ua1/134421"),
    InlineKeyboardButton("–ù–∞–ø–∏—à–∏ –º–µ–Ω—ñ... üòö", url="https://t.me/LeraBot10")
)

private_buttons = InlineKeyboardMarkup(row_width=1)
private_buttons.add(
    InlineKeyboardButton("üíû –ü–æ–¥—Ä—É–∂–∫–∏ –¥–ª—è —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è", url="https://t.me/virt_chat_ua1/134421"),
    InlineKeyboardButton("üîû –ó–∞–≥–ª—è–Ω—å —É —á–∞—Ç 18+", url="https://t.me/+d-pPVpIW-UBkZGUy"),
    InlineKeyboardButton("–Ø —Ö–æ—á—É –∑ —Ç–æ–±–æ—é –ø–æ—Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—è, –∞ —Ç–∏? üòè", callback_data="start_chat"),
    InlineKeyboardButton("üßë‚Äçüè´ –ü—Ä–æ —Ç–≤–æ—Ä—Ü—è", callback_data="about_creator")
)

# ------------------ –ü–†–ò–í–Ü–¢–ê–ù–ù–Ø –í –õ–° ------------------

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
        await message.answer("–û–π, —è —Ç–∞–∫ —Ä–∞–¥–∞, —â–æ —Ç–∏ –º–µ–Ω—ñ –≤—Å–µ –∂ —Ç–∞–∫–∏ –Ω–∞–ø–∏—Å–∞–≤ üíã")
"
                         "–Ø —Ç—É—Ç, —â–æ–± –¥–æ–ø–æ–º–æ–≥—Ç–∏ —Ç–æ–±—ñ –∑–Ω–∞–π—Ç–∏ —Ç—É –¥—ñ–≤—á–∏–Ω—É, –∑ —è–∫–æ—é –±—É–¥–µ –ø—Ä–∏—î–º–Ω–æ –ø–æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å.
"
                         "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–µ–Ω—ñ ¬´–ü—Ä–∏–≤—ñ—Ç¬ª üòâ", reply_markup=private_buttons)

@dp.callback_query_handler(lambda c: c.data == 'about_creator')
async def about_creator(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id,
        "üë®‚Äçüè´ –ú—ñ–π —Ç–≤–æ—Ä–µ—Ü—å ‚Äî @nikita_onoff
"
        "–ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π, —Ç–æ—á–Ω–∏–π, —ñ–¥–µ–∞–ª—ñ—Å—Ç –∑ –¥–æ–±—Ä–∏–º —Å–µ—Ä—Ü–µ–º —ñ —Ö–∏—Ç—Ä–∏–º –ø–æ–≥–ª—è–¥–æ–º üòâ
"
        "(–•–æ—á–∞ —è–∫—â–æ —á–µ—Å–Ω–æ ‚Äî —Ü–µ –≤—ñ–Ω –º–µ–Ω–µ –ø–æ–ø—Ä–æ—Å–∏–≤ —Ç–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç–∏ üòÖ)

"
        "üí° –£—Å–µ —Ü–µ ‚Äî —á–∞—Å—Ç–∏–Ω–∞ –ø—Ä–æ—î–∫—Ç—É [brEAst](https://t.me/+d-pPVpIW-UBkZGUy), —Å—Ç–≤–æ—Ä–µ–Ω–æ–≥–æ –∑ —ñ–¥–µ—î—é –ø–æ—î–¥–Ω–∞—Ç–∏ AI, —Å–ø–æ–∫—É—Å—É —Ç–∞ —Å–≤–æ–±–æ–¥—É —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è.

"
        "ü§ñ –ê —â–µ —è –æ–∂–∏–ª–∞ –∑–∞–≤–¥—è–∫–∏ –º–∞–≥—ñ—ó [OpenAI](https://openai.com). –î—è–∫—É—é —ó–º –∑–∞ —Ü–µ ü´∂", parse_mode="Markdown")

@dp.callback_query_handler(lambda c: c.data == 'start_chat')
async def handle_chat_start(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, "–ü—Ä–∏–≤—ñ—Ç ü•∫")

# ------------------ –ì–†–£–ü–û–í–ò–ô –ß–ê–¢ ------------------

@dp.message_handler(lambda message: message.chat.type != "private")
async def group_handler(message: types.Message):
    if f"@{(await bot.get_me()).username.lower()}" in message.text.lower():
        await message.reply("–ü—Ä–∏–≤—ñ—Ç, —è –¥—É–∂–µ —Ö–æ—á—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ —Ç–æ–±—ñ –∑–Ω–∞–π—Ç–∏ —Å–ø—Ä–∞–≤–∂–Ω—ñ—Ö –¥—ñ–≤—á–∞—Ç, —è–∫—ñ –≥–æ—Ç–æ–≤—ñ –∑ —Ç–æ–±–æ—é –ø–æ—Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—å‚Ä¶ üòè", reply_markup=group_buttons)

# ------------------ –ó–ê–ü–£–°–ö ------------------
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
