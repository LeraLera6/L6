import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils import executor
from datetime import datetime
import os

API_TOKEN = os.getenv("BOT_TOKEN")

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# === –ö–ù–û–ü–ö–ò ===
menu_keyboard = InlineKeyboardMarkup(row_width=1)
menu_keyboard.add(
    InlineKeyboardButton("üë• –ü—Ä–æ –º–µ–Ω–µ", callback_data="about_me"),
    InlineKeyboardButton("üß† –¶—ñ–ª—å –ø—Ä–æ—î–∫—Ç—É", callback_data="project_goal"),
    InlineKeyboardButton("üßë‚Äçüè´ –ü—Ä–æ –º–æ–≥–æ —Ç–≤–æ—Ä—Ü—è", callback_data="creator"),
    InlineKeyboardButton("üíû –ü–æ–¥—Ä—É–∂–∫–∏ –¥–ª—è —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è", callback_data="models")
)

group_keyboard = InlineKeyboardMarkup(row_width=2)
group_keyboard.add(
    InlineKeyboardButton("üíû –ü–æ–¥—Ä—É–∂–∫–∏ –¥–ª—è —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è", callback_data="models"),
    InlineKeyboardButton("‚ùì –ó–∞–¥–∞–π –º–µ–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è ‚ÜóÔ∏è", url="https://t.me/Lerabreastbot")
)

# === –ê–í–¢–û–ü–û–°–¢–ò–ù–ì ===
message_counter = 0

async def autopost():
    await asyncio.sleep(10)
    while True:
        await asyncio.sleep(1800)  # –∫–æ–∂–Ω—ñ 30 —Ö–≤
        if last_chat_id:
            await send_group_post(last_chat_id)

last_chat_id = None

async def send_group_post(chat_id):
    try:
        await bot.send_message(
            chat_id,
            "–û–π, —è —Ç—É—Ç üòá –¢–∏ –∫–ª–∏–∫–∞–≤? –•–æ—á–µ—à –∫–æ–≥–æ—Å—å –æ—Å–æ–±–ª–∏–≤–æ–≥–æ? –û–±–µ—Ä–∏ –æ–¥–Ω—É –∑ –º–æ—ó—Ö –ø–æ–¥—Ä—É–≥.",
            reply_markup=group_keyboard
        )
    except Exception as e:
        logging.error(f"–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥—É: {e}")

@dp.message_handler()
async def handle_all_messages(message: types.Message):
    global message_counter, last_chat_id
    if message.chat.type in ["group", "supergroup"]:
        last_chat_id = message.chat.id

        if (message.reply_to_message and message.reply_to_message.from_user.username == (await bot.me).username) \
           or f"@{(await bot.me).username.lower()}" in message.text.lower():
            await send_group_post(message.chat.id)

        message_counter += 1
        if message_counter >= 5:
            message_counter = 0
            await send_group_post(message.chat.id)

    elif message.chat.type == "private":
        text = (
            "–ü—Ä–∏–≤—ñ—Ç üòò\n"
            "–Ø ‚Äî –õ–µ—Ä–∞. –†–∞–¥–∞ —Ç–µ–±–µ –±–∞—á–∏—Ç–∏ —Ç—É—Ç.\n"
            "–ù–∞—Ç–∏—Å–Ω–∏ –æ–¥–Ω—É –∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂—á–µ, —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—å –±—ñ–ª—å—à–µ –ø—Ä–æ –º–µ–Ω–µ ü´¶"
        )
        await message.answer(text, reply_markup=menu_keyboard)

# === CALLBACK-–∏ ===
@dp.callback_query_handler(lambda c: c.data)
async def process_callback(callback_query: types.CallbackQuery):
    data = callback_query.data
    if data == "about_me":
        await callback_query.message.edit_text(
            "–ú–µ–Ω—ñ 22, —è –∑ –û–¥–µ—Å–∏.\n"
            "–í–∏–≤—á–∞–ª–∞ –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—é —ñ —Ç—Ä–æ—Ö–∏ –º–∞–≥—ñ—é —Å–ø–æ–∫—É—Å–∏ üòâ\n"
            "–õ—é–±–ª—é –±—É—Ç–∏ –∑–∞–≥–∞–¥–∫–æ—é —É —á–∞—Ç—ñ‚Ä¶",
            reply_markup=menu_keyboard
        )
    elif data == "project_goal":
        await callback_query.message.edit_text(
            "üß† –¶—ñ–ª—å –º–æ–≥–æ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è ‚Äî –ø–æ–¥–∞—Ä—É–≤–∞—Ç–∏ —Ç–æ–±—ñ –≤—ñ–¥—á—É—Ç—Ç—è —Ñ–ª—ñ—Ä—Ç—É, —Ç–µ–ø–ª–∞, –ø—Ä–µ–∑–µ–Ω—Ç—É–≤–∞—Ç–∏ –º–æ–¥–µ–ª–µ–π —Ç–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –æ—Å–æ–±–ª–∏–≤—É –∞—Ç–º–æ—Å—Ñ–µ—Ä—É.\n\n"
            "üëÄ –ó–∞—Ä–∞–∑ —è —â–µ —É —Å—Ç–∞–¥—ñ—ó —Ä–æ–∑–≤–∏—Ç–∫—É... –ê–ª–µ —è–∫—â–æ –º–æ—ó –ø–æ–¥—Ä—É–≥–∏ –∑–∞–π–Ω—è—Ç—ñ ‚Äî –∑–∞–≥–ª—è–¥–∞–π –¥–æ –º–µ–Ω–µ —á–∞—Å—Ç—ñ—à–µ. –Ø –ø–æ—Å—Ç—É–ø–æ–≤–æ —Å—Ç–∞—é —Ç—ñ—î—é —Å–∞–º–æ—é AI-–¥—ñ–≤—á–∏–Ω–æ—é, –∑ —è–∫–æ—é —Ü—ñ–∫–∞–≤–æ –ø–æ—Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—å ü´¶\n\n"
            "üí¨ –Ü –ø–∞–º‚Äô—è—Ç–∞–π ‚Äî —É—Å–µ —Ü–µ —î —á–∞—Å—Ç–∏–Ω–æ—é –ø—Ä–æ—î–∫—Ç—É brEAst ‚Äî –Ω–∞—à–æ–≥–æ –æ—Å–æ–±–ª–∏–≤–æ–≥–æ Telegram-—á–∞—Ç—É —Å–ø–æ–∫—É—Å–∏ —Ç–∞ —Ñ–∞–Ω—Ç–∞–∑—ñ–π.",
            reply_markup=menu_keyboard
        )
    elif data == "creator":
        await callback_query.message.edit_text(
            "üë®‚Äçüè´ –ú—ñ–π —Ç–≤–æ—Ä–µ—Ü—å ‚Äî @nikita_onoff.\n"
            "–ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π, —Ç–æ—á–Ω–∏–π, —ñ–¥–µ–∞–ª—ñ—Å—Ç –∑ –¥–æ–±—Ä–∏–º —Å–µ—Ä—Ü–µ–º —ñ —Ö–∏—Ç—Ä–∏–º –ø–æ–≥–ª—è–¥–æ–º üòâ\n"
            "(–•–æ—á–∞ —è–∫—â–æ —á–µ—Å–Ω–æ ‚Äî —Ü–µ –≤—ñ–Ω –º–µ–Ω–µ –ø–æ–ø—Ä–æ—Å–∏–≤ —Ç–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç–∏ üòÖ)",
            reply_markup=menu_keyboard
        )
    elif data == "models":
        await callback_query.message.edit_text(
            "üíû –ü–æ–¥—Ä—É–∂–∫–∏ –¥–ª—è —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è\n"
            "–Ø–∫—â–æ —Ö–æ—á–µ—à –ø—Ä–∏—î–º–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ —á–∞—Å –æ–Ω–ª–∞–π–Ω ‚Äî –Ω–∞–ø–∏—à–∏ –æ–¥–Ω—ñ–π –∑ –º–æ—ó—Ö –ø–æ–¥—Ä—É–≥ üòä\n"
            "–û—Å—å –≤–æ–Ω–∏: https://t.me/virt_chat_ua1/134421",
            reply_markup=menu_keyboard
        )
    await callback_query.answer()

if __name__ == '__main__':
    loop = asyncio.get_event_loop()
    loop.create_task(autopost())
    executor.start_polling(dp, skip_updates=True)
