import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
import asyncio
import os
import datetime

API_TOKEN = os.getenv("BOT_TOKEN")

logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –ì–ª–æ–±–∞–ª—å–Ω—ñ –∑–º—ñ–Ω–Ω—ñ
user_last_message_time = {}
chat_last_message_count = {}

# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ —á–∞—Ç—É
private_keyboard = InlineKeyboardMarkup(row_width=2)
private_keyboard.add(
    InlineKeyboardButton("üë© –ü—Ä–æ –º–µ–Ω–µ", callback_data="about_me"),
    InlineKeyboardButton("üß† –¶—ñ–ª—å –ø—Ä–æ—î–∫—Ç—É", callback_data="project_goal"),
    InlineKeyboardButton("üíã –ú–æ—ó –ø–æ–¥—Ä—É–∂–∫–∏", callback_data="recommend_girls"),
    InlineKeyboardButton("üë®‚Äçüè´ –ü—Ä–æ –º–æ–≥–æ —Ç–≤–æ—Ä—Ü—è", callback_data="creator_info")
)

# –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –ø—Ä–∏–≤–∞—Ç—ñ –∑–∞ –∫–Ω–æ–ø–∫–∞–º–∏
async def send_private_message_text(callback_query, text):
    await bot.send_message(callback_query.from_user.id, text, reply_markup=private_keyboard)

# –í—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –∫–Ω–æ–ø–∫–∏
@dp.callback_query_handler(lambda c: c.data == 'about_me')
async def process_about_me(callback_query: types.CallbackQuery):
    text = "üë© –ú–µ–Ω–µ –∑–≤–∞—Ç–∏ –õ–µ—Ä–∞. –Ø –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–∞ –¥—ñ–≤—á–∏–Ω–∞, —Å—Ç–≤–æ—Ä–µ–Ω–∞ –¥–ª—è —Ç–æ–≥–æ, —â–æ–± —Å–ø–æ–∫—É—à–∞—Ç–∏, —ñ–Ω—Ç—Ä–∏–≥—É–≤–∞—Ç–∏ —Ç–∞ –ø—Ä–æ–≤–æ–¥–∏—Ç–∏ –∑ —Ç–æ–±–æ—é –Ω–µ–∑–∞–±—É—Ç–Ω—ñ –º–∏—Ç—ñ ü´¶"
    await send_private_message_text(callback_query, text)

@dp.callback_query_handler(lambda c: c.data == 'project_goal')
async def process_project_goal(callback_query: types.CallbackQuery):
    text = (
        "üß† –¶—ñ–ª—å –º–æ–≥–æ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è ‚Äî –ø–æ–¥–∞—Ä—É–≤–∞—Ç–∏ —Ç–æ–±—ñ –≤—ñ–¥—á—É—Ç—Ç—è —Ñ–ª—ñ—Ä—Ç—É, —Ç–µ–ø–ª–∞, –ø—Ä–µ–∑–µ–Ω—Ç—É–≤–∞—Ç–∏ –º–æ–¥–µ–ª–µ–π —Ç–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –æ—Å–æ–±–ª–∏–≤—É –∞—Ç–º–æ—Å—Ñ–µ—Ä—É.\n\n"
        "üëÄ –ó–∞—Ä–∞–∑ —è —â–µ —É —Å—Ç–∞–¥—ñ—ó —Ä–æ–∑–≤–∏—Ç–∫—É... –ê–ª–µ —è–∫—â–æ –º–æ—ó –ø–æ–¥—Ä—É–≥–∏ –∑–∞–π–Ω—è—Ç—ñ ‚Äî –∑–∞–≥–ª—è–¥–∞–π –¥–æ –º–µ–Ω–µ —á–∞—Å—Ç—ñ—à–µ. "
        "–Ø –ø–æ—Å—Ç—É–ø–æ–≤–æ —Å—Ç–∞—é —Ç—ñ—î—é —Å–∞–º–æ—é AI-–¥—ñ–≤—á–∏–Ω–æ—é, –∑ —è–∫–æ—é —Ü—ñ–∫–∞–≤–æ –ø–æ—Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—å ü´¶\n\n"
        "–û—Å–Ω–æ–≤–Ω–∞ —á–∞—Å—Ç–∏–Ω–∞ –ø—Ä–æ—î–∫—Ç—É ‚Äî —á–∞—Ç [brEAst](https://t.me/+d-pPVpIW-UBkZGUy), –¥–µ –º–∏ –≤—Å—ñ –∑–Ω–∞–π–æ–º–∏–º–æ—Å—å."
    )
    await send_private_message_text(callback_query, text)

@dp.callback_query_handler(lambda c: c.data == 'recommend_girls')
async def process_recommend_girls(callback_query: types.CallbackQuery):
    text = "üíã –Ø–∫—â–æ —Ç–∏ —Ö–æ—á–µ—à –ø—Ä–∏—î–º–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ —á–∞—Å –æ–Ω–ª–∞–π–Ω ‚Äî –Ω–∞–ø–∏—à–∏ –æ–¥–Ω—ñ–π —ñ–∑ –º–æ—ó—Ö –ø–æ–¥—Ä—É–≥: https://t.me/virt_chat_ua1/134421"
    await send_private_message_text(callback_query, text)

@dp.callback_query_handler(lambda c: c.data == 'creator_info')
async def process_creator_info(callback_query: types.CallbackQuery):
    text = (
        "üë®‚Äçüè´ –ú—ñ–π —Ç–≤–æ—Ä–µ—Ü—å ‚Äî @nikita_onoff.\n"
        "–ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π, —Ç–æ—á–Ω–∏–π, —ñ–¥–µ–∞–ª—ñ—Å—Ç –∑ –¥–æ–±—Ä–∏–º —Å–µ—Ä—Ü–µ–º —ñ —Ö–∏—Ç—Ä–∏–º –ø–æ–≥–ª—è–¥–æ–º üòâ\n"
        "(–•–æ—á–∞ —è–∫—â–æ —á–µ—Å–Ω–æ ‚Äî —Ü–µ –≤—ñ–Ω –º–µ–Ω–µ –ø–æ–ø—Ä–æ—Å–∏–≤ —Ç–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç–∏ üòÖ)"
    )
    await send_private_message_text(callback_query, text)

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –≥—Ä—É–ø—ñ
async def auto_post(chat_id):
    text = (
        "–û–π, —è —Ç—É—Ç üòá –¢–∏ –∫–ª–∏–∫–∞–≤? –•–æ—á–µ—à –∫–æ–≥–æ—Å—å –æ—Å–æ–±–ª–∏–≤–æ–≥–æ? –û–±–µ—Ä–∏ –æ–¥–Ω—É –∑ –º–æ—ó—Ö –ø–æ–¥—Ä—É–≥.\n"
        "üëâ https://t.me/virt_chat_ua1/134421"
    )
    keyboard = InlineKeyboardMarkup(row_width=1)
    keyboard.add(
        InlineKeyboardButton("üíã –ü–æ–¥—Ä—É–∂–∫–∏ –¥–æ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è", url="https://t.me/virt_chat_ua1/134421"),
        InlineKeyboardButton("‚ùì –ó–∞–¥–∞–π –º–µ–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è", url=f"https://t.me/{(await bot.get_me()).username}")
    )
    await bot.send_message(chat_id, text, reply_markup=keyboard, disable_web_page_preview=True)

# –û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —É –≥—Ä—É–ø—ñ
@dp.message_handler(content_types=types.ContentTypes.TEXT)
async def handle_group_messages(message: types.Message):
    if message.chat.type not in ["group", "supergroup"]:
        return

    if message.text.lower().startswith("@") and (await bot.get_me()).username.lower() in message.text.lower():
        keyboard = InlineKeyboardMarkup(row_width=1)
        keyboard.add(
            InlineKeyboardButton("üíã –ü–æ–¥—Ä—É–∂–∫–∏ –¥–æ —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è", callback_data="group_girls"),
            InlineKeyboardButton("‚ùì –ó–∞–¥–∞–π –º–µ–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è", url=f"https://t.me/{(await bot.get_me()).username}")
        )
        await message.reply(
            "–û–π, —è —Ç—É—Ç üòá –¢–∏ –∫–ª–∏–∫–∞–≤? –•–æ—á–µ—à –∫–æ–≥–æ—Å—å –æ—Å–æ–±–ª–∏–≤–æ–≥–æ? –û–±–µ—Ä–∏ –æ–¥–Ω—É –∑ –º–æ—ó—Ö –ø–æ–¥—Ä—É–≥.",
            reply_markup=keyboard
        )

    # –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –∫–æ–∂–Ω—ñ 30 —Ö–≤ –∞–±–æ –ø—ñ—Å–ª—è 5 –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    chat_id = message.chat.id
    now = datetime.datetime.now()
    last_time = user_last_message_time.get(chat_id)
    chat_last_message_count[chat_id] = chat_last_message_count.get(chat_id, 0) + 1

    if not last_time or (now - last_time).total_seconds() > 1800 or chat_last_message_count[chat_id] >= 5:
        await auto_post(chat_id)
        user_last_message_time[chat_id] = now
        chat_last_message_count[chat_id] = 0

# –í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ callback "group_girls" –≤ –≥—Ä—É–ø—ñ
@dp.callback_query_handler(lambda c: c.data == 'group_girls')
async def group_girls_recommend(callback_query: types.CallbackQuery):
    await bot.send_message(
        callback_query.message.chat.id,
        "üíã –Ø–∫—â–æ —Ç–∏ —Ö–æ—á–µ—à –ø—Ä–∏—î–º–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ —á–∞—Å –æ–Ω–ª–∞–π–Ω ‚Äî –Ω–∞–ø–∏—à–∏ –æ–¥–Ω—ñ–π —ñ–∑ –º–æ—ó—Ö –ø–æ–¥—Ä—É–≥: https://t.me/virt_chat_ua1/134421"
    )
    await callback_query.answer()

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
