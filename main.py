import telebot
import openai
import time
import os

# –ó–º—ñ–Ω–Ω—ñ –∑ –æ—Ç–æ—á–µ–Ω–Ω—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
ASSISTANT_ID = os.getenv("GPT_ID")

bot = telebot.TeleBot(BOT_TOKEN)
openai.api_key = OPENAI_API_KEY

# –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω—ñ —Ç—Ä–µ–¥–∏ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
user_threads = {}

def create_thread_for_user(user_id):
    thread = openai.beta.threads.create()
    user_threads[user_id] = thread.id
    return thread.id

@bot.message_handler(commands=["start"])
def handle_start(message):
    bot.send_message(message.chat.id, "–ü–∏—à–∏ –º–µ–Ω—ñ —Å—é–¥–∏ –±—É–¥—å-—â–æ ‚Äî —è –≤—ñ–¥–ø–æ–≤—ñ–º —è–∫ —Ç–≤–æ—è AI-–ø–æ–¥—Ä—É–≥–∞ üíã")

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    user_id = message.from_user.id
    text = message.text

    # –û—Ç—Ä–∏–º—É—î–º–æ –∞–±–æ —Å—Ç–≤–æ—Ä—é—î–º–æ thread –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    thread_id = user_threads.get(user_id)
    if not thread_id:
        thread_id = create_thread_for_user(user_id)

    # –î–æ–¥–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ —Ç—Ä–µ–¥
    openai.beta.threads.messages.create(
        thread_id=thread_id,
        role="user",
        content=text
    )

    # –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–ø—É—Å–∫ (run)
    run = openai.beta.threads.runs.create(
        thread_id=thread_id,
        assistant_id=ASSISTANT_ID
    )

    # –û—á—ñ–∫—É—î–º–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è run
    while True:
        run_status = openai.beta.threads.runs.retrieve(
            thread_id=thread_id,
            run_id=run.id
        )
        if run_status.status == "completed":
            break
        elif run_status.status == "failed":
            bot.send_message(message.chat.id, "‚ùå –©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—ñ–¥ —á–∞—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ...")
            return
        time.sleep(1)

    # –û—Ç—Ä–∏–º—É—î–º–æ –æ—Å—Ç–∞–Ω–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∞—Å–∏—Å—Ç–µ–Ω—Ç–∞
    messages = openai.beta.threads.messages.list(thread_id=thread_id)
    for msg in reversed(messages.data):
        if msg.role == "assistant":
            bot.send_message(message.chat.id, msg.content[0].text.value)
            break

bot.infinity_polling()
