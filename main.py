import logging
from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.dispatcher.filters import CommandStart
from aiogram.utils.exceptions import BotBlocked
import os

API_TOKEN = os.getenv("BOT_TOKEN")

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –ö–Ω–æ–ø–∫–∏ –º–µ–Ω—é
menu_keyboard = InlineKeyboardMarkup(row_width=1)
menu_keyboard.add(
    InlineKeyboardButton("üë©‚Äç‚ù§Ô∏è‚Äçüë© –ü–æ–¥—Ä—É–∂–∫–∏ –¥–ª—è —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è", url="https://t.me/virt_chat_ua1/134421"),
    InlineKeyboardButton("üß† –ü—Ä–æ –º–µ–Ω–µ", callback_data="about_me"),
    InlineKeyboardButton("üë®‚Äçüíª –ü—Ä–æ –º–æ–≥–æ —Ç–≤–æ—Ä—Ü—è", callback_data="about_creator"),
    InlineKeyboardButton("üí¨ brEAst", url="https://t.me/+d-pPVpIW-UBkZGUy")
)

@dp.message_handler(CommandStart())
async def send_welcome(message: types.Message):
    try:
        await message.answer(
            "–ü—Ä–∏–≤—ñ—Ç, —è –õ–µ—Ä–∞ ü§ç\n–•–æ—á–µ—à —Ç—Ä–æ—Ö–∏ —Å–ª–∞–±–∫–æ—ó –≤–∞–≥–∏?.. –û–±–∏—Ä–∞–π –Ω–∏–∂—á–µ...",
            reply_markup=menu_keyboard
        )
    except BotBlocked:
        logging.warning(f"Bot blocked by user {message.from_user.id}")

@dp.callback_query_handler(lambda c: c.data == 'about_me')
async def process_about_me(callback_query: types.CallbackQuery):
    await callback_query.answer()
    await bot.send_message(
        callback_query.from_user.id,
        "–ú–µ–Ω—ñ 22, —è –∑ –û–¥–µ—Å–∏.\n–í–∏–≤—á–∞–ª–∞ –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—é —ñ —Ç—Ä–æ—Ö–∏ –º–∞–≥—ñ—é —Å–ø–æ–∫—É—Å–∏ üòâ\n–õ—é–±–ª—é –±—É—Ç–∏ –∑–∞–≥–∞–¥–∫–æ—é —É —á–∞—Ç—ñ..."
    )

@dp.callback_query_handler(lambda c: c.data == 'about_creator')
async def process_about_creator(callback_query: types.CallbackQuery):
    await callback_query.answer()
    await bot.send_message(
        callback_query.from_user.id,
        "üë®‚Äçüíª –ú—ñ–π —Ç–≤–æ—Ä–µ—Ü—å ‚Äî @nikita_onoff.\n–ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π, —Ç–æ—á–Ω–∏–π, —ñ–¥–µ–∞–ª—ñ—Å—Ç –∑ –¥–æ–±—Ä–∏–º —Å–µ—Ä—Ü–µ–º —ñ —Ö–∏—Ç—Ä–∏–º –ø–æ–≥–ª—è–¥–æ–º üòâ\n(–•–æ—á–∞ —è–∫—â–æ —á–µ—Å–Ω–æ ‚Äî —Ü–µ –≤—ñ–Ω –º–µ–Ω–µ –ø–æ–ø—Ä–æ—Å–∏–≤ —Ç–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç–∏ üòÖ)"
    )

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
