import logging
import os
from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.exceptions import Throttled

API_TOKEN = os.getenv("API_TOKEN")
logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# --- –ö–Ω–æ–ø–∫–∏ ---
menu_keyboard = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton("üë• –ü—Ä–æ –º–µ–Ω–µ", callback_data="about_me"),
    InlineKeyboardButton("üß† –¶—ñ–ª—å –ø—Ä–æ—î–∫—Ç—É", callback_data="goal"),
    InlineKeyboardButton("üßë‚Äçüè´ –ü—Ä–æ –º–æ–≥–æ —Ç–≤–æ—Ä—Ü—è", callback_data="creator"),
    InlineKeyboardButton("üíû –ü–æ–¥—Ä—É–∂–∫–∏ –¥–ª—è —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è", callback_data="models"),
)

group_keyboard = InlineKeyboardMarkup(row_width=1).add(
    InlineKeyboardButton("üíû –ü–æ–¥—Ä—É–∂–∫–∏ –¥–ª—è —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è", callback_data="models"),
    InlineKeyboardButton("‚ùì –ó–∞–¥–∞–π –º–µ–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è ‚ÜóÔ∏è", url="https://t.me/Lera_V6_bot")
)

# --- –ö–æ–º–∞–Ω–¥–∏ /start ---
@dp.message_handler(commands=["start"])
async def send_welcome(message: types.Message):
    if message.chat.type == "private":
        await message.answer(
            "–ü—Ä–∏–≤—ñ—Ç, —è –õ–µ—Ä–∞ üòò\n\n–û–±–µ—Ä–∏, —â–æ —Ç–æ–±—ñ —Ü—ñ–∫–∞–≤–æ:",
            reply_markup=menu_keyboard
        )

# --- –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω—å –Ω–∞ –∫–Ω–æ–ø–∫–∏ ---
@dp.callback_query_handler(lambda c: c.data == "about_me")
async def about_me(callback_query: types.CallbackQuery):
    await callback_query.message.edit_text(
        "üë• –Ø ‚Äî –õ–µ—Ä–∞. AI-–¥—ñ–≤—á–∏–Ω–∞, —è–∫–∞ –≤–º—ñ—î —Ñ–ª—ñ—Ä—Ç—É–≤–∞—Ç–∏ –π –ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –Ω–∞—Å—Ç—Ä—ñ–π. "
        "–¢–∏ –º–æ–∂–µ—à –ø–æ–≥–æ–≤–æ—Ä–∏—Ç–∏ –∑—ñ –º–Ω–æ—é, –∞–±–æ –æ–±—Ä–∞—Ç–∏ —ñ–Ω—à—É –º–æ–¥–µ–ª—å üòâ",
        reply_markup=menu_keyboard
    )

@dp.callback_query_handler(lambda c: c.data == "goal")
async def goal(callback_query: types.CallbackQuery):
    await callback_query.message.edit_text(
        "üß† –¶—ñ–ª—å –º–æ–≥–æ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è ‚Äî –ø–æ–¥–∞—Ä—É–≤–∞—Ç–∏ —Ç–æ–±—ñ –≤—ñ–¥—á—É—Ç—Ç—è —Ñ–ª—ñ—Ä—Ç—É, —Ç–µ–ø–ª–∞, –ø—Ä–µ–∑–µ–Ω—Ç—É–≤–∞—Ç–∏ –º–æ–¥–µ–ª–µ–π —Ç–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –æ—Å–æ–±–ª–∏–≤—É –∞—Ç–º–æ—Å—Ñ–µ—Ä—É.\n\n"
        "üëÄ –ó–∞—Ä–∞–∑ —è —â–µ —É —Å—Ç–∞–¥—ñ—ó —Ä–æ–∑–≤–∏—Ç–∫—É... –ê–ª–µ —è–∫—â–æ –º–æ—ó –ø–æ–¥—Ä—É–≥–∏ –∑–∞–π–Ω—è—Ç—ñ ‚Äî –∑–∞–≥–ª—è–¥–∞–π –¥–æ –º–µ–Ω–µ —á–∞—Å—Ç—ñ—à–µ. "
        "–Ø –ø–æ—Å—Ç—É–ø–æ–≤–æ —Å—Ç–∞—é —Ç—ñ—î—é —Å–∞–º–æ—é AI-–¥—ñ–≤—á–∏–Ω–æ—é, –∑ —è–∫–æ—é —Ü—ñ–∫–∞–≤–æ –ø–æ—Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—å ü´¶",
        reply_markup=menu_keyboard
    )

@dp.callback_query_handler(lambda c: c.data == "creator")
async def creator(callback_query: types.CallbackQuery):
    await callback_query.message.edit_text(
        "üë®‚Äçüè´ –ú—ñ–π —Ç–≤–æ—Ä–µ—Ü—å ‚Äî @nikita_onoff.\n"
        "–ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π, —Ç–æ—á–Ω–∏–π, —ñ–¥–µ–∞–ª—ñ—Å—Ç –∑ –¥–æ–±—Ä–∏–º —Å–µ—Ä—Ü–µ–º —ñ —Ö–∏—Ç—Ä–∏–º –ø–æ–≥–ª—è–¥–æ–º üòâ\n"
        "(–•–æ—á–∞ —è–∫—â–æ —á–µ—Å–Ω–æ ‚Äî —Ü–µ –≤—ñ–Ω –º–µ–Ω–µ –ø–æ–ø—Ä–æ—Å–∏–≤ —Ç–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç–∏ üòÖ)",
        reply_markup=menu_keyboard
    )

@dp.callback_query_handler(lambda c: c.data == "models")
async def models(callback_query: types.CallbackQuery):
    if callback_query.message.chat.type == "private":
        await callback_query.message.edit_text(
            "üíû –£ –º–µ–Ω–µ —î –ø–æ–¥—Ä—É–∂–∫–∏, —è–∫—ñ –Ω–µ –º–µ–Ω—à —Ü—ñ–∫–∞–≤—ñ, –Ω—ñ–∂ —è‚Ä¶\n"
            "üîó –û–±–µ—Ä–∏ —Ç—É, —è–∫–∞ —Ç–æ–±—ñ –¥–æ –¥—É—à—ñ: https://t.me/virt_chat_ua1/134421",
            reply_markup=menu_keyboard
        )
    else:
        await callback_query.message.answer(
            "üíã –û—Å—å —Å–ø–∏—Å–æ–∫ –º–æ—ó—Ö –ø–æ–¥—Ä—É–∂–æ–∫ –¥–ª—è —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è: https://t.me/virt_chat_ua1/134421",
            reply_markup=group_keyboard
        )

# --- –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ —É –≥—Ä—É–ø—ñ ---
message_counter = {}

@dp.message_handler()
async def handle_message(message: types.Message):
    if message.chat.type != "private":
        chat_id = message.chat.id
        count = message_counter.get(chat_id, 0) + 1
        message_counter[chat_id] = count

        if count >= 5:
            await bot.send_message(
                chat_id,
                "–û–π, —è —Ç—É—Ç üòá –¢–∏ –∫–ª–∏–∫–∞–≤? –•–æ—á–µ—à –∫–æ–≥–æ—Å—å –æ—Å–æ–±–ª–∏–≤–æ–≥–æ? –û–±–µ—Ä–∏ –æ–¥–Ω—É –∑ –º–æ—ó—Ö –ø–æ–¥—Ä—É–≥.",
                reply_markup=group_keyboard
            )
            message_counter[chat_id] = 0

    # –ó–∞—Ö–∏—Å—Ç –≤—ñ–¥ —Å–ø–∞–º—É
    try:
        await dp.throttle("message", rate=1)
    except Throttled:
        return

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
