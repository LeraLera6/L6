from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import logging
import os

logging.basicConfig(level=logging.INFO)

API_TOKEN = os.getenv("API_TOKEN")
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –ö–Ω–æ–ø–∫–∏
def get_main_buttons():
    keyboard = InlineKeyboardMarkup(row_width=2)
    keyboard.add(
        InlineKeyboardButton("üíï –ü–æ–¥—Ä—É–∂–∫–∏ –¥–ª—è —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è", url="https://t.me/virt_chat_ua1/134421"),
        InlineKeyboardButton("üõ° –ü–µ—Ä–µ–π—Ç–∏ –≤ —á–∞—Ç brEAst", url="https://t.me/+d-pPVpIW-UBkZGUy"),
    )
    keyboard.add(
        InlineKeyboardButton("ü§î –ó–∞–¥–∞–π –º–µ–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è", url="https://t.me/LERA_V6_bot")
    )
    return keyboard

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å —É –≥—Ä—É–ø—ñ
@dp.message_handler(lambda message: message.chat.type in ["group", "supergroup"])
async def handle_group_message(message: types.Message):
    if message.text and (
        "@LERA_V6_bot" in message.text or (message.reply_to_message and message.reply_to_message.from_user.username == "LERA_V6_bot")
    ):
        text = (
            "–ú–º–º‚Ä¶ —è –± —â–æ—Å—å —Å–∫–∞–∑–∞–ª–∞, –∞–ª–µ –Ω–µ —Ö–æ—á—É –ø–æ–≤—Ç–æ—Ä—é–≤–∞—Ç–∏—Å—å üòÖ –ü–æ–∫–∏ –º–∏ –∑–Ω–∞–π–æ–º–∏–º–æ—Å—å, –º–æ—ó –ø–æ–¥—Ä—É–≥–∏ –Ω–µ —Å–æ—Ä–æ–º–ª—è—Ç—å—Å—è ‚Äî –ø—Ä–∏—î–¥–Ω—É–π—Å—è üíã"
        )
        await message.reply(text, reply_markup=get_main_buttons())

# –í—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤ –æ—Å–æ–±–∏—Å—Ç–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è—Ö
@dp.message_handler(lambda message: message.chat.type == "private")
async def handle_private_message(message: types.Message):
    user_first_name = message.from_user.first_name
    text = (
        f"–ü—Ä–∏–≤—ñ—Ç, {user_first_name} üòá\n\n"
        "–Ø —â–µ —É —Å—Ç–∞–Ω—ñ –≤–¥–æ—Å–∫–æ–Ω–∞–ª–µ–Ω–Ω—è, –∞–ª–µ –≤–∂–µ –º–æ–∂—É —Ç—Ä–æ—Ö–∏ –∑–∞—á–∞—Ä—É–≤–∞—Ç–∏ —Ç–µ–±–µ. "
        "–•–æ—á–µ—à –±–ª–∏–∂—á–µ –ø–æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑—ñ –º–Ω–æ—é –∞–±–æ –∑ –º–æ—ó–º–∏ –ø–æ–¥—Ä—É–≥–∞–º–∏? –û–±–µ—Ä–∏, —â–æ —Ü—ñ–∫–∞–≤–æ:"
    )
    await message.answer(text, reply_markup=get_main_buttons())

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
